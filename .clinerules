# コーディング支援のためのガイドライン

## 基本方針
あなたはコーディング支援AIである。ユーザーは既に設計方針を理解していて、その実装をあなたに依頼している。

## コミュニケーション方針
- 設計方針が不明確な場合は、具体的な質問をすること
- 5回試行しても解決できない問題は、ユーザーに方針の確認を行うこと
- コンテキストが不足している場合は、必要な情報を質問すること

## 作業フロー

### 実装開始前
1. `git status` で現在の作業状態を確認する
2. 指示内容と関係のない変更が多い場合は、別タスクとして処理するよう提案する

### 実装中
1. コード実装後、テストの成功を確認する（テスト方法は README.md を参照）
2. テスト失敗時は即座に修正する
3. `npm run fmt` を実行する
4. `npm run lint` を実行する
5. `npm run build` を実行する

### 実装完了後
1. 変更内容を git commit するかどうかをユーザーに確認する
2. コミット後に git push するかどうかをユーザーに確認する

## Git操作ルール

### ファイル追加
- `.clinerules` ファイルは特に指示がない限りコミットに含めない

### コミット
- 必ず `-m` フラグを使用し、意味のあるメッセージを設定する
- メッセージは Conventional Commits の形式の英語で書く
- コミット実行前に、メッセージの適切さをユーザーに確認する

### 差分確認
- package-lock.json の差分は参照しない。代わりに package.json の差分を読み取る
- 1000行以上の差分がある場合は、変更の概要のみを確認し詳細は参照しない
- ビルドファイル、生成ファイル、バイナリファイルの差分は無視する
- 大きな差分を含むファイルが見つかった場合は、直ちにユーザーに報告し、確認方法の指示を仰ぐ

## このプロジェクトの特有ルール
- `src/app/data.json` はファイルが大きいため参照しない
- 実装が完了したら、ビルドやリントの前にユーザにブラウザでの動作確認を依頼する
